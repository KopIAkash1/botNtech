import telebot
import config
import assigneeAPI

bot = telebot.TeleBot(config.api)

@bot.message_handler(commands=["pong"])
def pong(message):
    bot.reply_to(message, "PING")

@bot.message_handler(commands=["assignee"], func=lambda message: check_author_and_format(message))
def assigne_to_user(message):
    tag = ""
    try: 
        print(len(str(message.text).split(" ")))
        if message.text == "/assignee":
            name = assigneeAPI.assigne_to_next()
            bot.send_message(message.chat.id, f"üñäÔ∏è–ü–µ—Ä–µ–Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—èüñäÔ∏è\n–ù–∞–∑–Ω–∞—á–µ–Ω–æ: {name}")
        elif len(message.text.split(" ")) == 2:
            next_user = message.text.split(" ")[1]
            name = assigneeAPI.assigne_to_next(next_user_param=next_user)
            bot.send_message(message.chat.id, f"üìé–ü–µ—Ä–µ–Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ –Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—èüìé\n–ù–∞–∑–Ω–∞—á–µ–Ω–æ:{name}")
        elif len(message.text.split(" ")) == 3:
            old_user = message.text.split(" ")[1]
            next_user = message.text.split(" ")[2]
            name = assigneeAPI.assigne_to_next(old_user_param=old_user, next_user_param=next_user)
            bot.send_message(message.chat.id, f"ü§ù–ü–µ—Ä–µ–Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ —Å –æ–¥–Ω–æ–≥–æ –Ω–∞ –¥—Ä—É–≥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—èü§ù\n–¢–∏–∫–µ—Ç—ã —Å {old_user}\n–ù–∞–∑–Ω–∞—á–µ–Ω—ã –Ω–∞ {next_user}")
    except Exception as e: print(F"WARNING | Get exception in message. Message: {message.text}\n{e}")
    return

def is_tagging(message):
    return f'@{bot.get_me().username}' in message.text

def check_author_and_format(message):
    return message.from_user.username in config.users # and is_tagging(message)

@bot.message_handler(commands=['get_channel_id_for_chat'], func=lambda message: check_author_and_format(message))
def get_channel_id(message):
    bot.send_message(message.chat.id, f"ID —á–∞—Ç–∞: {message.chat.id}\nThread —á–∞—Ç–∞: {message.message_thread_id}",reply_to_message_id=message.message_id)


if __name__ == "__main__":
    bot.polling()